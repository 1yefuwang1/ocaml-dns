# OASIS_START
# DO NOT EDIT (digest: b41a7049160297510cbf929bab024ba4)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library dns
"lib": include
"lib/dnslexer.cmx": for-pack(Dns)
"lib/Dnslexer.cmx": for-pack(Dns)
"lib/dnsparser.cmx": for-pack(Dns)
"lib/Dnsparser.cmx": for-pack(Dns)
"lib/dnsloader.cmx": for-pack(Dns)
"lib/Dnsloader.cmx": for-pack(Dns)
"lib/dnspacket.cmx": for-pack(Dns)
"lib/Dnspacket.cmx": for-pack(Dns)
"lib/dnsquery.cmx": for-pack(Dns)
"lib/Dnsquery.cmx": for-pack(Dns)
"lib/dnsrr.cmx": for-pack(Dns)
"lib/Dnsrr.cmx": for-pack(Dns)
"lib/dnsserver.cmx": for-pack(Dns)
"lib/Dnsserver.cmx": for-pack(Dns)
"lib/dnstrie.cmx": for-pack(Dns)
"lib/Dnstrie.cmx": for-pack(Dns)
"lib/hashcons.cmx": for-pack(Dns)
"lib/Hashcons.cmx": for-pack(Dns)
<lib/*.ml{,i}>: pkg_re
<lib/*.ml{,i}>: pkg_bitstring.syntax
<lib/*.ml{,i}>: pkg_bitstring
# Library server
"server": include
<server/*.ml{,i}>: pkg_lwt.unix
<server/*.ml{,i}>: pkg_lwt.syntax
<server/*.ml{,i}>: pkg_lwt
<server/*.ml{,i}>: pkg_bitstring.syntax
<server/*.ml{,i}>: pkg_bitstring
# Executable lwt_server
<lib_test/lwt_server.{native,byte}>: pkg_re.str
<lib_test/lwt_server.{native,byte}>: pkg_re
<lib_test/lwt_server.{native,byte}>: pkg_lwt.unix
<lib_test/lwt_server.{native,byte}>: pkg_lwt
<lib_test/lwt_server.{native,byte}>: pkg_bitstring
<lib_test/*.ml{,i}>: pkg_re.str
<lib_test/*.ml{,i}>: pkg_re
<lib_test/*.ml{,i}>: pkg_lwt.unix
<lib_test/*.ml{,i}>: pkg_lwt
<lib_test/*.ml{,i}>: pkg_bitstring
<lib_test/lwt_server.{native,byte}>: custom
# OASIS_STOP
<lib/*>: syntax_camlp4o
<lib/*>: bitstring.syntax
<lib/*>: pkg_lwt.syntax
<server/*>: syntax_camlp4o
<server/*>: pkg_lwt.syntax
<lib_test/*>: syntax_camlp4o
<lib_test/*>: pkg_lwt.syntax
